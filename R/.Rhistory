source('~/Desktop/GitHub/migen/R/mpmik.R', echo=TRUE)
mpmik
## TMI calculates the target MI
#### set integration limit ########
w2 <- c(1,1,1)
probs <- w2 / sum(w2)
il<-20
TMI <- function(x){
u <- function(y){
z<-0
for(i in 1:nrow(x)){
z<-z+w2[i]/sum(w2)*dnorm(y,x[i,1],x[i,2])
}
return(z)
}
TMI <- 0
for(i in 1:nrow(x)){
ui <- function(y){
z<-dnorm(y,x[i,1],x[i,2])*log(dnorm(y,x[i,1],x[i,2])/u(y))
return(z)
}
TMI <- TMI+w2[i]/sum(w2)*integrate(ui,lower=-il,upper=il)$value
}
return(TMI)
}
################################################################
x1 <- TMI(cbind(c(0,0,0),rep(1,3)))
x2 <- TMI(cbind(c(-1,0,1),rep(1,3)))
x3 <- TMI(cbind(c(-5,0,5),rep(1,3)))
set.seed(11)
p<- 2000
s<- 100
w <- rowSums(rmultinom(s, 1, prob=probs))
X<-c(rep("A",w[1]), rep("B",w[2]), rep("C",w[3]))
Y<-rnorm(sum(w),0,1)
mpmik(Y,X)
library(moments)
mpmik(Y,X)
w <- rowSums(rmultinom(s, 1, prob=probs))
X<-c(rep("A",w[1]), rep("B",w[2]), rep("C",w[3]))
Y<-rnorm(sum(w),0,1)
mpmik(Y,X)
w <- rowSums(rmultinom(s, 1, prob=probs))
X<-c(rep("A",w[1]), rep("B",w[2]), rep("C",w[3]))
W<-c(rnorm(w[1],-5,1), rnorm(w[2],0,1), rnorm(w[3],5,1))
mpmik(W,X)
